# pyinstaller --console --one-file .\sourcehold\__main__.py 


name: Python pyinstaller

on:
  workflow_dispatch: {}
  push:
    branches: [ master ]

jobs:
  build_pyinstaller:
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        platform: [x64]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        python-platform: [x64]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.python-platform }}
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.4.1
        with:
          arch: ${{ matrix.python-platform }}
        if: matrix.os == 'windows-latest'
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade wheel setuptools Cython
          pip install flake8 pytest
          pip install -r requirements.txt
      - name: Install GitHub CLI
        run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            sudo apt-get update && sudo apt-get install gh -y
          elif [ "${{ runner.os }}" = "Windows" ]; then
            choco install gh -y
          fi
      - name: Run pyinstaller
        shell: bash
        run: |
          python -m pip install pyinstaller
          pyinstaller --console --onefile ./sourcehold/__main__.py --name sourcehold
      - name: Ensure special latest release exists
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Set continue on error to true
          set +e
          if [[ "$(gh --repo sourcehold/sourcehold-maps release view latest 2>&1)" == "release not found" ]]; then
            set -e
            gh --repo sourcehold/sourcehold-maps release create latest --latest
          fi
      - name: Upload pyinstaller to special latest release
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh --repo sourcehold/sourcehold-maps release upload latest dist/sourcehold* --clobber
      - name: Ensure release exists
        if: github.ref_type == 'tag'
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Set continue on error to true
          set +e
          if [[ "$(gh --repo sourcehold/sourcehold-maps release view ${{ github.ref_name }} 2>&1)" == "release not found" ]]; then
            set -e
            gh --repo sourcehold/sourcehold-maps release create ${{ github.ref_name }} --latest
          fi
      - name: Upload pyinstaller to release
        if: github.ref_type == 'tag'
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh --repo sourcehold/sourcehold-maps release upload ${{ github.ref_name }} dist/sourcehold*