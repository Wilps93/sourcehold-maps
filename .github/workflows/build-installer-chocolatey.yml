name: Build Installer (Chocolatey)

on:
  workflow_dispatch: {}
  push:
    branches: [ main, master ]
    paths:
      - 'installer.nsi'
      - 'sourcehold_converter_gui.py'
      - 'sourcehold_converter_cli.py'
      - 'build_installer.py'
      - 'build_exe.py'
      - 'download_dependencies.py'
      - 'requirements.txt'
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

permissions:
  contents: write
  actions: read

jobs:
  build-installer:
    runs-on: windows-latest
    
    steps:
      # Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Настройка Python
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      # Включение Developer Command Prompt для MSVC
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.4.1
        with:
          arch: x64
          
      # Установка Chocolatey и NSIS
      - name: Install Chocolatey and NSIS
        run: |
          echo "Installing Chocolatey..."
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          
          echo "Installing NSIS via Chocolatey..."
          choco install nsis -y
          
          echo "Adding NSIS to PATH..."
          $env:PATH += ";C:\Program Files (x86)\NSIS"
          echo "NSIS_PATH=C:\Program Files (x86)\NSIS" >> $env:GITHUB_ENV
          
      # Установка Python зависимостей
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade wheel setuptools
          pip install -r requirements.txt
          pip install pyinstaller
          
      # Загрузка системных зависимостей
      - name: Download system dependencies
        run: |
          python download_dependencies.py
          
      # Сборка исполняемых файлов
      - name: Build executables
        run: |
          python build_exe.py
          
      # Проверка наличия собранных файлов
      - name: Check built executables
        run: |
          echo "Checking built executables..."
          if (Test-Path "dist\sourcehold-converter.exe") {
            echo "✓ GUI executable found"
            Get-ChildItem "dist\sourcehold-converter.exe" | Select-Object Name, Length
          } else {
            echo "✗ GUI executable not found"
            exit 1
          }
          
          if (Test-Path "dist\sourcehold-converter-cli.exe") {
            echo "✓ CLI executable found"
            Get-ChildItem "dist\sourcehold-converter-cli.exe" | Select-Object Name, Length
          } else {
            echo "✗ CLI executable not found"
            exit 1
          }
          
      # Создание инсталлера
      - name: Build installer
        shell: powershell
        run: |
          & "C:\Program Files (x86)\NSIS\makensis.exe" installer.nsi
          
      # Проверка инсталлера
      - name: Check installer
        run: |
          echo "Checking installer..."
          if (Test-Path "SourceholdMapsConverter-Setup.exe") {
            echo "✓ Installer created successfully"
            Get-ChildItem "SourceholdMapsConverter-Setup.exe" | Select-Object Name, Length
          } else {
            echo "✗ Installer not found"
            exit 1
          }
          
      # Создание релиза latest если не существует
      - name: Ensure latest release exists
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create latest --title "Latest Installer" --notes "Latest installer build" --draft || true
          
      # Загрузка инсталлера в релиз latest
      - name: Upload installer to latest release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release upload latest SourceholdMapsConverter-Setup.exe --clobber
          
      # Создание релиза для тегов
      - name: Create release for tags
        if: github.ref_type == 'tag'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ github.ref_name }} --title "Release ${{ github.ref_name }}" --notes "Installer for version ${{ github.ref_name }}" --draft || true
          
      # Загрузка инсталлера в релиз тега
      - name: Upload installer to tag release
        if: github.ref_type == 'tag'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release upload ${{ github.ref_name }} SourceholdMapsConverter-Setup.exe --clobber
          
      # Загрузка артефактов
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: installer-build
          path: |
            SourceholdMapsConverter-Setup.exe
            dist/
            dependencies/
          retention-days: 30
          
      # Создание summary
      - name: Create build summary
        run: |
          echo "## 🎉 Installer Build Summary" >> $env:GITHUB_STEP_SUMMARY
          echo "" >> $env:GITHUB_STEP_SUMMARY
          echo "### ✅ Build completed successfully!" >> $env:GITHUB_STEP_SUMMARY
          echo "" >> $env:GITHUB_STEP_SUMMARY
          echo "**Installer:** SourceholdMapsConverter-Setup.exe" >> $env:GITHUB_STEP_SUMMARY
          echo "" >> $env:GITHUB_STEP_SUMMARY
          echo "**Size:** $((Get-ChildItem 'SourceholdMapsConverter-Setup.exe').Length / 1MB) MB" >> $env:GITHUB_STEP_SUMMARY
          echo "" >> $env:GITHUB_STEP_SUMMARY
          echo "**Includes:**" >> $env:GITHUB_STEP_SUMMARY
          echo "- Python 3.11 runtime" >> $env:GITHUB_STEP_SUMMARY
          echo "- Visual C++ Redistributable" >> $env:GITHUB_STEP_SUMMARY
          echo "- All Python dependencies" >> $env:GITHUB_STEP_SUMMARY
          echo "- GUI and CLI applications" >> $env:GITHUB_STEP_SUMMARY
          echo "- AIV conversion support" >> $env:GITHUB_STEP_SUMMARY
          echo "" >> $env:GITHUB_STEP_SUMMARY
          echo "**Download:** Available in the latest release" >> $env:GITHUB_STEP_SUMMARY